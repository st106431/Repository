#include <iostream>
#include <random>
#include <set>
#include <vector>
#include <algorithm>
#include <iterator>
#include <random>
#include <time.h>
using namespace std;
#define _CRT_SECURE_NO_WARNINGS

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);
    long long* t = new long long[1000001] {0};
    int N;
    int M;
    int temp;
    int k;
    cin >> N >> M;
    long long* hx = new long long[M + N] { 0 };
    srand(time(NULL));
    mt19937 rng(rand());
    uniform_int_distribution <long long>random(1, 1844674407370959999);
    for (int i = 1; i < 1000000; i++)
    {
        t[i] = random(rng);
    }
    int** mas = new int* [M];
    for (int i = 0; i < M; i++)
    {
        mas[i] = new int[2];
    }
    for (int i = 0; i < N; i++)
    {
        cin >> k;
        for (int j = 0; j < k; j++)
        {
            cin >> temp;
            hx[i] = hx[i] ^ t[temp];
        }
    }
    for (int i = 0; i < M; i++)
    {
        cin >> mas[i][0] >> mas[i][1];
    }
    for (int i = 0; i < M; i++)
    {
        hx[N + i] = hx[mas[i][0] - 1] ^ hx[mas[i][1] - 1];
        int count = 0;
        for (int w = 0; w < N + i; w++)
        {
            if (hx[N + i] == hx[w])
            {
                count++;
            }
        }
        cout << count << " ";
    }
}
